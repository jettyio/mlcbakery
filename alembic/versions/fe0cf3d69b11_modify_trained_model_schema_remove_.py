"""modify_trained_model_schema_remove_framework_add_fields

Revision ID: fe0cf3d69b11
Revises: 1ef1e530c8f2
Create Date: 2025-05-26 15:35:24.612647

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fe0cf3d69b11'
down_revision: Union[str, None] = '1ef1e530c8f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###

        # Ensure 'asset_origin' column exists in 'entities' table
        # This is defensive, in case the Entity model was updated but its migration missed this or wasn't run.
        conn = op.get_bind()
        inspector = sa.inspect(conn)
        columns_entities = inspector.get_columns('entities')
        if not any(c['name'] == 'asset_origin' for c in columns_entities):
            op.add_column('entities', sa.Column('asset_origin', sa.String(), nullable=True))
            print("Added 'asset_origin' column to 'entities' table as it was missing.")
        else:
            print("'asset_origin' column already exists in 'entities' table.")

        # Modify 'trained_models' table
        op.drop_column('trained_models', 'framework')
        print("Dropped 'framework' column from 'trained_models' table.")

        op.add_column('trained_models', sa.Column('long_description', sa.Text(), nullable=True))
        print("Added 'long_description' column to 'trained_models' table.")
        
        # For PostgreSQL, you might prefer JSONB:
        # op.add_column('trained_models', sa.Column('model_attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        # For other DBs (like SQLite), use SA's JSON type:
        op.add_column('trained_models', sa.Column('model_attributes', sa.JSON(), nullable=True))
        print("Added 'model_attributes' column to 'trained_models' table.")
        
        # ### end Alembic commands ###



def downgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###

        # Revert 'trained_models' table modifications
        # For PostgreSQL (if JSONB was used in upgrade):
        # op.drop_column('trained_models', 'model_attributes', type_=postgresql.JSONB(astext_type=sa.Text()))
        # For other DBs:
        op.drop_column('trained_models', 'model_attributes', type_=sa.JSON())
        print("Dropped 'model_attributes' column from 'trained_models' table.")
        
        op.drop_column('trained_models', 'long_description', type_=sa.Text())
        print("Dropped 'long_description' column from 'trained_models' table.")
        
        op.add_column('trained_models', sa.Column('framework', sa.VARCHAR(), autoincrement=False, nullable=False))
        print("Re-added 'framework' column to 'trained_models' table.")
