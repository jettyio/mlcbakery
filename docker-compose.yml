services:
  api:
    container_name: mlcbakery
    build:
      context: .
      dockerfile: Dockerfile.bakery
    ports:
      - "8000:8000"
    volumes:
      - .:/app    
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/mlcbakery
      - PYTHONPATH=/app
      - ADMIN_AUTH_TOKEN=${ADMIN_AUTH_TOKEN}
      - TYPESENSE_HOST=search
      - TYPESENSE_PORT=8108
      - TYPESENSE_PROTOCOL=http
      - TYPESENSE_API_KEY=thisisatestkey
      - TYPESENSE_COLLECTION_NAME=mlcbakery_datasets
    depends_on:
      - db

  mcp:
    container_name: mcp
    build:
      context: .
      dockerfile: Dockerfile.mcp
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
  db:
    image: postgres:16-alpine
    container_name: mlcbakery_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mlcbakery
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  caddy:
    image: caddy:2.10.0-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  search:
    image: typesense/typesense:0.25.2 # Use a specific version
    container_name: mlcbakery_typesense
    environment:
      - TYPESENSE_DATA_DIR=/data
      # Use a strong, randomly generated API key in production
      - TYPESENSE_API_KEY=thisisatestkey
      - TYPESENSE_COLLECTION_NAME=mlcbakery_datasets
      - TYPESENSE_ENABLE_CORS=true # Allow CORS for easier development
    volumes:
      - typesense_data:/data
    ports:
      - "8108:8108" # Default Typesense port

volumes:
  caddy_data:
  caddy_config:
  postgres_data:
  typesense_data: {} # Add volume definition
